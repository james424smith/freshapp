// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebRender snapshot test should render correct ui when resourceType is html  1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={false}
    onContentProcessDidTerminate={[Function]}
    onHttpError={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    source={
      Object {
        "html": "<html><body><p>Hi</p></body></html>",
      }
    }
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    useSharedProcessPool={true}
  />
</View>
`;

exports[`WebRender snapshot test should render correct ui when resourceType is url  1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      undefined,
    ]
  }
>
  <RNCWebView
    cacheEnabled={true}
    injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
    injectedJavaScriptForMainFrameOnly={true}
    javaScriptEnabled={true}
    messagingEnabled={false}
    onContentProcessDidTerminate={[Function]}
    onHttpError={[Function]}
    onLoadingError={[Function]}
    onLoadingFinish={[Function]}
    onLoadingProgress={[Function]}
    onLoadingStart={[Function]}
    onMessage={[Function]}
    onShouldStartLoadWithRequest={[Function]}
    source={
      Object {
        "uri": "https://www.google.com/",
      }
    }
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        Object {
          "backgroundColor": "#ffffff",
        },
        undefined,
      ]
    }
    useSharedProcessPool={true}
  />
</View>
`;
